;  ChipCE's Bed Mesh Area (heavily modified by Christian Vick)
;  Part of CV's Klipper Printer Additions.         
;  
;
;  â€¢â€¢â€¢â€¢ Support
;  â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢
;    If my work supports you, you might like to support me too.
;  â€¢ PayPal: https://www.paypal.com/paypalme/Morgennebel/
;    
;    
;    When you buy something, please use my Referal-Link, at no additional cost:
;  â€¢ AliExpress: https://s.click.aliexpress.com/e/_De0Vu1h
;  â€¢ Amazon: https://amzn.to/3L35OX2
;    
;    Thank you!
;    Christian ðŸ™‚

;â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢
;â€¢â€¢â€¢â€¢ Module Standard Stuff
;â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢
[delayed_gcode _startup_check_bed_mesh_area]
initial_duration: 3.02
gcode:
  ; Introduce me
  {% set module_version = "3.0b4" %} 
  _Module_loaded_add NAME="Bed Mesh Area" VERSION="{module_version}"

[gcode_macro Mesh_Adaptive_Mode]
description: KPA Button. Creates an adaptive bed mesh, according to the area where the model is printed on the bed. Saves time on smaller models. 
gcode:
  {% set myname = "Mesh_Adaptive_Mode" %}
  {% set psv = printer.save_variables.variables %}
  {% set varis = printer["gcode_macro _varis"] %}

  {% set modi = ["adaptive", "multiple"] %}
  {% set mode = psv.pre_print_mesh_mode %}

  {% if varis.button_clicked_name != myname %} 
    {% set pre = "STATUS: " %}

  {% else %} 
    {% set pre = "SET: " %}
    {% set mode = "adaptive" %}
    SAVE_VARIABLE VARIABLE=pre_print_mesh_mode VALUE='"{mode}"'

  {% endif %}

    {% set suff2 = "

    To switch to Adaptive Mesh mode, click this button again within 5 seconds." %}

  {% if mode == "adaptive" %}
    {% set dmode = "ON: Adaptive Mesh Mode" %}
    {% set suff2 = "" %}
  {% elif mode == "multiple" %}
    {% set dmode = "OFF: Adaptive Mesh Mode" %}
  {% else %}
    {% set dmode = "Unknown mode: " + mode|string %}
  {% endif %}

  {% set m = pre + dmode + suff2 + "

    INFO:
    Adaptive Mesh Mode creates a bed mesh before every print. The bed is only probed in the area where the model is printed, which saves time on smaller prints." %}

  {action_respond_info(m)}

  _UI_Button_Clicked NAME={myname}

;â€¢ The following code has been originally written by ChipCE.
;â€¢ Source: https://gist.github.com/ChipCE/95fdbd3c2f3a064397f9610f915f7d02
;â€¢ This is a heavily modified version of it, to fit the needs of the KPA.

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE

variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0

variable_mesh_area_offset : 20 

variable_probe_samples : 2     

variable_min_probe_count : 3   

variable_probe_count_scale_factor : 1.0 

gcode:
    ; 2023 12 27 Added by Christian Vick
    _LgCoordinates MSG="Before bed mesh."

    {% set psv = printer.save_variables.variables %}
    {% set varis = printer["gcode_macro _varis"] %}

    {% set mesh_name = params.PROFILE|default("default")|string%} 

    {% set meshPointX = varis.mesh_probe_point_count_x %}
    {% set meshPointY = varis.mesh_probe_point_count_y %}

    ; End Added by Christian Vick

    _Lg TYPE="mesh" MSG="BMC: mesh_name:{mesh_name} meshPointX:{meshPointX} meshPointY:{meshPointY}"

    {% if params.AREA_START and params.AREA_END %}

      {% set bedMeshConfig = printer.configfile.config.bed_mesh %}
      {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
      {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
      {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
      {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
      _Lg TYPE="mesh" MSG="BMC: \n safe_min_x:{safe_min_x} \n safe_min_y:{safe_min_y} \n safe_max_x:{safe_max_x} \n safe_max_y:{safe_max_y}"

      {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	    {% set area_min_y = params.AREA_START.split(",")[1]|float %}
	    {% set area_max_x = params.AREA_END.split(",")[0]|float %}
	    {% set area_max_y = params.AREA_END.split(",")[1]|float %}
      _Lg TYPE="mesh" MSG="BMC: params.AREA_START:{params.AREA_START}"
      _Lg TYPE="mesh" MSG="BMC: params.AREA_END:{params.AREA_END}"

      _Lg TYPE="mesh" MSG="BMC A: area_min_x:{area_min_x} area_min_y:{area_min_y} area_max_x:{area_max_x} area_max_y:{area_max_y}"

	    {% set meshMaxPointX = meshPointX %}
	    {% set meshMaxPointY = meshPointY %}

        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}

          {% if area_min_x - mesh_area_offset >=  safe_min_x %}
              {% set area_min_x = area_min_x - mesh_area_offset %}
          {% else %}
              {% set area_min_x = safe_min_x %}
          {% endif %}

          {% if area_min_y - mesh_area_offset >=  safe_min_y %}
              {% set area_min_y = area_min_y - mesh_area_offset %}
          {% else %}
              {% set area_min_y = safe_min_y %}
          {% endif %}

          {% if area_max_x + mesh_area_offset <=  safe_max_x %}
              {% set area_max_x = area_max_x + mesh_area_offset %}
          {% else %}
              {% set area_max_x = safe_max_x %}
          {% endif %}

          {% if area_max_y + mesh_area_offset <=  safe_max_y %}
              {% set area_max_y = area_max_y + mesh_area_offset %}
          {% else %}
              {% set area_max_y = safe_max_y %}
          {% endif %}

          _Lg TYPE="mesh" MSG="BMC B: area_min_x:{area_min_x} area_min_y:{area_min_y} area_max_x:{area_max_x} area_max_y:{area_max_y}"

          {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
          {% set meshPointX = min_probe_count if (meshPointX < min_probe_count) else meshPointX %}
          {% set meshPointX =   meshMaxPointX if (meshPointX > meshMaxPointX)   else meshPointX %}

          {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
          {% set meshPointY = min_probe_count if (meshPointY < min_probe_count) else meshPointY %}
          {% set meshPointY =   meshMaxPointY if (meshPointY > meshMaxPointY)   else meshPointY%}

          ; 2023 12 26 Added by Christian Vick

          {% set meshPointX = 4 if (meshPointX < 4) and (meshPointY > 6) else meshPointX %}

          {% set meshPointY = 4 if (meshPointY < 4) and (meshPointX > 6) else meshPointY %}

          {action_respond_info("An adaptive bed mesh will be created.
          Probe Points X: "+meshPointX|string+"
          Probe Points Y: "+meshPointY|string+"
          ..........Name: "+mesh_name)}

          ; End Added by Christian Vick

          {% set algorithm = "bicubic" %}
	        {% if "algorithm" in bedMeshConfig %}
	          {% set algorithm = bedMeshConfig.algorithm %}
          {% endif %}
          {% if meshPointX >=7 or meshPointY >=7 %}
              {% set algorithm = "bicubic" %}
          {% endif %}


          BED_MESH_CALIBRATE_BASE PROFILE={mesh_name} mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
          SAVE_VARIABLE VARIABLE=pre_print_mesh_name VALUE='"Adaptive"'

        {% else %}

          BED_MESH_CALIBRATE_BASE PROFILE={mesh_name} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% endif %}
    {% else %}


        BED_MESH_CALIBRATE_BASE PROFILE="{mesh_name}" probe_count={meshPointX},{meshPointY} samples={probe_samples|int} 
    {% endif %}
    _LgCoordinates MSG="After bed mesh."