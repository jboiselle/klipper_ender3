;  Sovol SV07 Extra Features
;  Part of CV's Klipper Printer Additions.
;   
;  â€¢ More reliable probing, for homing, z-tilt and bed mesh.
;    
;  â€¢ Temperature Display of the MCU and the Host
;    In additions to Bed- and Extruder temperature, this displays the temperature of:
;    â€¢ MCU (Main Control Unit): This is the board that drives the printer's hardware. It is located in the bottom housing.
;    â€¢ Host (Raspberry Pi variant from Makerbase): This is the board that runs Klipper, Wifi, USB, and the Display. It is located under the display.
;    
;  â€¢ Fixes failing prints because of the error "Move exceeds maximum extrusion".
;
;  â€¢ Handles M600 Filament Changes.
;
;  â€¢ Replaces the stock PAUSE, RESUME, CANCEL_PRINT macros with enhanced macros.
;
;  â€¢ Idle-safety: Disable heaters and motors after 15 minutes of inactivity.
;
;  â€¢ Protects you from executing Z-Tilt manually, if printing with Z-Tilt is disabled, to safe you from bad first layers.
;
;  â€¢ Display stuck in startup-animation: Sometimes the displays of KlipperScreen / SV07 go into an endless startup-animation-loop, while the printer is still normally working via Mainsail. A missing preference of KlipperScreen causes this. This preference item is now created by the Klipper Printer Additions, so the display can exit the loop.
;
;  â€¢ Handles the print head's LED on print-start / print-end / print-cancel. Fully customizable to whatever behavior you prefer (see further down the macro "_LED_On_KPA").
;
;
;  
;
;-------------------------------
;-------------------------------
;  SV07 with firmware 1.0.11 !!!
;-------------------------------
;-------------------------------
;  If you have an SV07 with firmware 1.0.11, copy the following two lines to the top of your printer.cfg. Then, in printer.cfg, remove the two ";" (semicolons) from the beginning.
;  Otherwise variables can't be saved, and nothing will work correctly.
;-------------------------------
;[save_variables]
;filename: ~/printer_data/config/saved_variables.cfg

;
;
;
;  
;  â€¢â€¢â€¢â€¢ Support
;  â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢
;    If my work supports you, you might like to support me too.
;  â€¢ PayPal: https://www.paypal.com/paypalme/Morgennebel/
;    
;    
;    When you buy something, please use my Referal-Link, at no additional cost:
;  â€¢ AliExpress: https://s.click.aliexpress.com/e/_De0Vu1h
;  â€¢ Amazon: https://amzn.to/3L35OX2
;    
;    Thank you!
;    Christian ðŸ™‚

[gcode_macro _LED_On_KPA]       
variable_led_power_percent: 100 
gcode:
  SET_PIN PIN=my_led VALUE={led_power_percent/100}

[gcode_macro _LED_Off_KPA]    
variable_led_power_percent: 0 
gcode:
  SET_PIN PIN=my_led VALUE={led_power_percent/100}

[delayed_gcode _startup_check_svzeroseven_features]
initial_duration: 3.06 
gcode:

  {% set module_version = "3.0b4" %} 
  _Module_loaded_printer_add NAME="Sovol SV07 Features" VERSION="{module_version}"

  {% set psv = printer.save_variables.variables %}

  {% if psv.was_interrupted is not defined %}

    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  {% endif %}

  {% if not psv.was_interrupted %}
    SAVE_VARIABLE VARIABLE=print_is_running_f VALUE=False

  {% endif %}

[gcode_macro _PPActionFlow_PrintStart_Init_After_PrinterSpecific]
gcode:
  _LED_On_KPA

[gcode_macro Z_TILT_ADJUST]
rename_existing: Z_TILT_ADJUST_ORI
gcode:
  {% set psv = printer.save_variables.variables %}
  {% set gc = psv.pre_print_gantry_calibrate_f %}

  {% if gc %}
    Z_TILT_ADJUST_ORI
  {% else %}
    {action_respond_info("SV07: Running Z_TILT_ADJUST manually may easily lead to bad first layers! 
    There's no advantage to run it manually.
    If you still want to run it manually, you need to enable it also for printing. To do so click the button 'PREPRINT GANTRY CALIBRATION MODI' twice.")}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: KPA: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    RUN_SHELL_COMMAND CMD=clear_plr
    clear_last_file
    CANCEL_PRINT_BASE
    _End_Print_KPA MSG="SV07: Best Print Cancelled."
    _LED_Off_KPA

[gcode_macro _End_Print_PrinterSpecific]
gcode:
  _End_Print_KPA
  _LED_Off_KPA

[gcode_macro PAUSE] 
description: KPA: Pause the running print
rename_existing: PAUSE_ORI
gcode:
  RESPOND TYPE=echo MSG="SV07: Pause Print."

  {% set z_raise = params.Z|default(50)|float %} 

  {% set e = params.E|default(0.5) %}        

  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set cur_z = printer.toolhead.position.z|float %}
  {% set target_z = cur_z + z_raise %}
  {% set target_z = target_z if (max_z >= target_z) else max_z %}

  PAUSE_ORI

  {% if printer.extruder.can_extrude|lower == 'true' %}
    {action_respond_info("Retracting: "+e|string+"mm.

    â€¢ Before you resume the print, make sure to extrude enough, so the nozzle is fully loaded with filament.
    â€¢ Wait a few seconds before you remove the hanging filament thread. Then resume the print immediately.")}
    G92 E0 
    G1 E-{e} F3000 

  {% else %}

    RESPOND TYPE=error MSG="Cannot retract - the nozzle temperature too low."
  {% endif %}

  {% if "xyz" in printer.toolhead.homed_axes %}    
    G1 Z{target_z}

  {% else %}
    RESPOND TYPE=error MSG="Cannot retract - the printer is not homed."
  {% endif %}
  G92 E0 

[gcode_macro RESUME]  
description: KPA: Resume the actual running print
rename_existing: RESUME_ORI
gcode:
  RESPOND TYPE=echo MSG="SV07: RESUME Print."

  {% if printer["filament_switch_sensor my_sensor"].filament_detected == True %} 

    {% set e = params.E|default(0.5) %} 
    {% set e_connect = params.E_CONNECT|default(1.0) %} 

    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY) %}

    {% else %}

      {% set get_params = "" %}
    {% endif %}

    {% if printer.extruder.can_extrude|lower == 'true' %}
      RESUME_ORI {get_params}

      G92 E0 
      G1 E{e_connect} 

      {action_respond_info("Extruding (improve connection to previous layer): "+e_connect|string+"mm.")}
    {% else %}
    RESPOND TYPE=echo MSG="Cannot extrude - the nozzle temperature is too low."
    {% endif %}

  {% else %}
     RESPOND TYPE=echo MSG="Please insert filament into the filament sensor!"
  {% endif %} 
  G92 E0 

[gcode_macro M600]
gcode:
  RESPOND TYPE=echo MSG="SV07: M600 Filament Change received."

  PAUSE E=0

  G92 E0 
  G1 E-30 F1000 
  RESPOND TYPE=echo MSG="SV07: Unloading Filament."

[gcode_macro _Home_XYZ_IfNotHomed_PrinterSpecific]

gcode:
  {% if not ("xyz" in printer.toolhead.homed_axes) %}
    RESPOND TYPE=command MSG="Homing XYZ..."
    _Probe_Prepare
    M84 E 
    G28     
    _Probe_End
  {% endif %}

[gcode_macro _Home_Z_PrinterSpecific]

gcode:
  RESPOND TYPE=command MSG="Homing Z..."
  _MoveToZhomeStart
  _Probe_Prepare
  G28 Z   
  _Probe_End

[gcode_macro _Gantry_Calibrate_PrinterSpecific]

gcode:
  {% set varis = printer["gcode_macro _varis"] %}

  RESPOND TYPE=command MSG="Z-Tilt..."
  _Move_Speed_Set MMS={varis.move_mms_norm}
  _Home_XYZ_IfNotHomed
  _Probe_Prepare
  Z_TILT_ADJUST 
  _Probe_End

[gcode_macro _PrintStopped_SaveConfig_PrinterSpecific]

gcode:

  CANCEL_PRINT_BASE 

  {% set psv = printer.save_variables.variables %}

  {% if psv.was_interrupted is defined %} SAVE_VARIABLE VARIABLE=print_is_running_f VALUE=False {% endif %}

[gcode_macro T0]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 1..."

[gcode_macro T1]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 2..."

[gcode_macro T2]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 3..."

[gcode_macro T3]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 4..."

[gcode_macro T4]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 5..."

[gcode_macro T5]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 6..."

[gcode_macro T6]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 7..."

[gcode_macro T7]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 8..."

[gcode_macro T8]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 9..."

[gcode_macro T9]
gcode:
  RESPOND TYPE=command MSG="Printing with Filament 10..."

[probe]
samples_tolerance: 0.01
samples_tolerance_retries: 3 
samples_result: average         
samples: 2                      

[bed_mesh]
speed: 230 
bicubic_tension: 0.2     
fade_start: 1.0          
fade_end: 10             
mesh_pps:2,2             
move_check_distance: 5   
split_delta_z: .025      
algorithm: bicubic       

[z_tilt]
retries: 50             
speed: 230 
retry_tolerance: 0.0025 

[safe_z_home]
speed: 230 
z_hop: 5 
z_hop_speed: 20             

[temperature_sensor Main_Control_Unit] 
sensor_type: temperature_mcu

[temperature_sensor Makerbase_MKS_Pi]
sensor_type: temperature_host

[idle_timeout] 
gcode:
    RESPOND TYPE=echo MSG="No operations in 15min! Turning off heaters and motors."

    TURN_OFF_HEATERS
    M84 X Y E 

timeout: 900 

[extruder]
max_extrude_cross_section: 500